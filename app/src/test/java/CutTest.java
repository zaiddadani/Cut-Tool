/*
 * This Java source file was generated by the Gradle 'init' task.
 */


import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Test;

import cut.Cut;
import cut.Cutter;
import cut.CutterException;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import java.net.URISyntaxException;
import java.net.URL;
import java.nio.file.Paths;

class CutTest {

    private Reader reader;

    void ReadReader(String testfile) throws FileNotFoundException, URISyntaxException {
        URL resource = CutTest.class.getResource("tests/"+testfile);
        File file = Paths.get(resource.toURI()).toFile();
        reader = new FileReader(file);
    }

    @AfterEach
    void CloseReader() throws IOException {
        if (reader != null) {
            reader.close();
        }
    }

    @Test
    void shape6x1_sample_expectscorrect() throws URISyntaxException, IOException, CutterException {
        //Arrange
        ReadReader("sample.tsv");
        var cut = new Cut("", "", '\t', "1");
        var cutter = new Cutter(reader, cut);

        //Act
        var result = cutter.processLines();
        
        //Assert
        var shape = result.shape();
        assertEquals(6, shape.rows);
        assertEquals(1, shape.cols);

        System.out.println(result.printResult());
    }

    @Test
    void shape6x3_sample_expectscorrect() throws URISyntaxException, IOException, CutterException {
        //Arrange
        ReadReader("sample.tsv");
        var cut = new Cut("", "", '\t', "1,3,2");
        var cutter = new Cutter(reader, cut);

        //Act
        var result = cutter.processLines();
        
        //Assert
        var shape = result.shape();
        assertEquals(6, shape.rows);
        assertEquals(3, shape.cols);

        System.out.println(result.printResult());
    }



    @Test
    void shapeNx1_fourchords_expectscorrect() throws URISyntaxException, IOException, CutterException {
        //Arrange
        ReadReader("fourchords.csv");
        var cut = new Cut("", "", ',', "1");
        var cutter = new Cutter(reader, cut);

        //Act
        var result = cutter.processLines();
        
        //Assert
        var shape = result.shape();
        assertEquals(1, shape.cols);

        System.out.println(result.printResult());
    }


    @Test
    void shapeNx3_fourchords_expectscorrect() throws URISyntaxException, IOException, CutterException {
        //Arrange
        ReadReader("fourchords.csv");
        var cut = new Cut("", "", ',', "1,2,3");
        var cutter = new Cutter(reader, cut);

        //Act
        var result = cutter.processLines();
        
        //Assert
        var shape = result.shape();
        assertEquals(3, shape.cols);

        System.out.println(result.printResult());
    }

    @Test
    void shapeNx1_fourchords_expectsempty() throws URISyntaxException, IOException, CutterException {
        //Arrange
        ReadReader("fourchords.csv");
        var cut = new Cut("", "", ',', "10");
        var cutter = new Cutter(reader, cut);

        //Act
        var result = cutter.processLines();
        
        //Assert
        var shape = result.shape();
        assertEquals(1, shape.cols);

        System.out.println(result.printResult());
    }
}
